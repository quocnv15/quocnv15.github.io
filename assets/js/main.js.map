{
  "version": 3,
  "sources": ["../../src/ts/modules/utils/dom.ts", "../../src/ts/modules/theme.ts", "../../src/ts/modules/navigation.ts", "../../src/ts/modules/copy-code.ts", "../../src/ts/modules/toc.ts", "../../src/ts/main.ts"],
  "sourcesContent": ["/**\n * Type-safe DOM manipulation utilities\n *\n * Provides:\n * - Safe element querying with TypeScript generics\n * - Null-checked element access\n * - Performance-optimized DOM operations\n * - Cross-browser compatibility helpers\n */\n\n/**\n * Query selector with guaranteed return type\n * Throws error if element not found - use when element is required\n */\nexport const qs = <T extends Element = Element>(\n  selector: string,\n  parent: ParentNode = document\n): T => {\n  const element = parent.querySelector<T>(selector);\n  if (!element) {\n    throw new Error(`Required element not found: ${selector}`);\n  }\n  return element;\n};\n\n/**\n * Query selector with optional return type\n * Returns null if element not found - use when element is optional\n */\nexport const qsSafe = <T extends Element = Element>(\n  selector: string,\n  parent: ParentNode = document\n): T | null => {\n  return parent.querySelector<T>(selector);\n};\n\n/**\n * Query selector all with type safety\n */\nexport const qsa = <T extends Element = Element>(\n  selector: string,\n  parent: ParentNode = document\n): NodeListOf<T> => {\n  return parent.querySelectorAll<T>(selector);\n};\n\n/**\n * Create element with attributes and text content\n */\nexport const create = <K extends keyof HTMLElementTagNameMap>(\n  tag: K,\n  attributes?: Record<string, string>,\n  textContent?: string\n): HTMLElementTagNameMap[K] => {\n  const element = document.createElement(tag);\n\n  if (attributes) {\n    Object.entries(attributes).forEach(([key, value]) => {\n      element.setAttribute(key, value);\n    });\n  }\n\n  if (textContent !== undefined) {\n    element.textContent = textContent;\n  }\n\n  return element;\n};\n\n/**\n * Check if DOM is ready\n */\nexport const ready = (callback: () => void): void => {\n  if (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', callback);\n  } else {\n    callback();\n  }\n};\n\n/**\n * Debounce function for event handlers\n */\nexport const debounce = <T extends (...args: any[]) => any>(\n  func: T,\n  wait: number\n): ((...args: Parameters<T>) => void) => {\n  let timeout: NodeJS.Timeout;\n\n  return (...args: Parameters<T>) => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => func(...args), wait);\n  };\n};\n\n/**\n * Throttle function for scroll handlers\n */\nexport const throttle = <T extends (...args: any[]) => any>(\n  func: T,\n  limit: number\n): ((...args: Parameters<T>) => void) => {\n  let inThrottle: boolean;\n\n  return (...args: Parameters<T>) => {\n    if (!inThrottle) {\n      func(...args);\n      inThrottle = true;\n      setTimeout(() => inThrottle = false, limit);\n    }\n  };\n};\n\n/**\n * Check if element is in viewport\n */\nexport const isInViewport = (element: Element): boolean => {\n  const rect = element.getBoundingClientRect();\n  return (\n    rect.top >= 0 &&\n    rect.left >= 0 &&\n    rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&\n    rect.right <= (window.innerWidth || document.documentElement.clientWidth)\n  );\n};\n\n/**\n * Smooth scroll to element with offset\n */\nexport const scrollToElement = (\n  element: Element,\n  offset: number = 0,\n  behavior: ScrollBehavior = 'smooth'\n): void => {\n  const elementPosition = element.getBoundingClientRect().top + window.scrollY;\n  const offsetPosition = elementPosition - offset;\n\n  window.scrollTo({\n    top: offsetPosition,\n    behavior\n  });\n};\n\n/**\n * Add event listener with cleanup function\n */\nexport const addEventListener = <K extends keyof HTMLElementEventMap>(\n  element: HTMLElement,\n  event: K,\n  handler: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any,\n  options?: boolean | AddEventListenerOptions\n): (() => void) => {\n  element.addEventListener(event, handler, options);\n\n  return () => {\n    element.removeEventListener(event, handler, options);\n  };\n};\n\n/**\n * Get computed style value\n */\nexport const getStyle = (element: Element, property: string): string => {\n  return window.getComputedStyle(element).getPropertyValue(property);\n};\n\n/**\n * Check if CSS custom property is supported\n */\nexport const supportsCustomProperties = (): boolean => {\n  return CSS.supports('color', 'var(--test)');\n};\n\n/**\n * Load external script dynamically\n */\nexport const loadScript = (src: string): Promise<void> => {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement('script');\n    script.src = src;\n    script.async = true;\n\n    script.onload = () => resolve();\n    script.onerror = () => reject(new Error(`Failed to load script: ${src}`));\n\n    document.head.appendChild(script);\n  });\n};", "/**\n * Dark mode theme management\n *\n * Features:\n * - Support light, dark, and system preference modes\n * - Persist user preference in LocalStorage\n * - Smooth transitions between themes\n * - Accessibility compliant (focus indicators, ARIA labels)\n * - Cross-browser compatibility\n * - System preference detection\n */\n\nimport { qsSafe, addEventListener } from './utils/dom';\nimport type { ThemeMode } from '../interfaces/types';\n\nexport type { ThemeMode };\n\nconst STORAGE_KEY = 'theme';\nconst THEME_ATTRIBUTE = 'data-theme';\nconst THEME_TRANSITION_DURATION = 300; // ms\n\n/**\n * Get system preferred theme\n */\nconst getSystemTheme = (): ThemeMode => {\n  if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n    return 'dark';\n  }\n  return 'light';\n};\n\n/**\n * Get stored theme from localStorage\n */\nexport const getStoredTheme = (): ThemeMode => {\n  try {\n    const stored = localStorage.getItem(STORAGE_KEY) as ThemeMode;\n    if (stored && ['light', 'dark', 'system'].includes(stored)) {\n      return stored;\n    }\n  } catch (error) {\n    console.warn('Failed to read theme from localStorage:', error);\n  }\n  return 'system';\n};\n\n/**\n * Get current active theme\n */\nexport const getCurrentTheme = (): ThemeMode => {\n  const stored = getStoredTheme();\n  if (stored === 'system') {\n    return getSystemTheme();\n  }\n  return stored;\n};\n\n/**\n * Apply theme to document\n */\nexport const applyTheme = (theme: ThemeMode): void => {\n  const actualTheme = theme === 'system' ? getSystemTheme() : theme;\n  document.documentElement.setAttribute(THEME_ATTRIBUTE, actualTheme);\n\n  // Update theme toggle button if it exists\n  updateToggleButton(actualTheme);\n\n  // Add transition class for smooth theme switching\n  document.documentElement.classList.add('theme-transitioning');\n\n  // Remove transition class after animation completes\n  setTimeout(() => {\n    document.documentElement.classList.remove('theme-transitioning');\n  }, THEME_TRANSITION_DURATION);\n\n  console.log(`\uD83C\uDFA8 Theme applied: ${actualTheme} (stored: ${theme})`);\n};\n\n/**\n * Store theme preference\n */\nconst storeTheme = (theme: ThemeMode): void => {\n  try {\n    localStorage.setItem(STORAGE_KEY, theme);\n  } catch (error) {\n    console.warn('Failed to save theme to localStorage:', error);\n  }\n};\n\n/**\n * Toggle between light and dark themes\n */\nexport const toggleTheme = (): void => {\n  const current = getCurrentTheme();\n  const next: ThemeMode = current === 'light' ? 'dark' : 'light';\n\n  // If current stored theme is 'system', update it to the actual theme\n  const stored = getStoredTheme();\n  storeTheme(stored === 'system' ? next : 'system');\n  applyTheme(stored === 'system' ? next : 'system');\n};\n\n/**\n * Set specific theme\n */\nexport const setTheme = (theme: ThemeMode): void => {\n  storeTheme(theme);\n  applyTheme(theme);\n};\n\n/**\n * Update toggle button state\n */\nconst updateToggleButton = (actualTheme: ThemeMode): void => {\n  const toggle = qsSafe('.theme-toggle');\n  if (!toggle) return;\n\n  const isActive = actualTheme === 'dark';\n  toggle.classList.toggle('active', isActive);\n  toggle.setAttribute('aria-pressed', isActive.toString());\n\n  // Update button text/icon if needed\n  const icon = toggle.querySelector('.theme-icon');\n  if (icon) {\n    icon.textContent = actualTheme === 'dark' ? '\uD83C\uDF19' : '\u2600\uFE0F';\n  }\n\n  // Update button title\n  toggle.setAttribute('title', actualTheme === 'dark' ? 'Switch to light mode' : 'Switch to dark mode');\n};\n\n/**\n * Listen for system theme changes\n */\nexport const watchSystemTheme = (): void => {\n  if (!window.matchMedia) return;\n\n  const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n\n  const handleChange = (): void => {\n    const stored = getStoredTheme();\n    if (stored === 'system') {\n      applyTheme('system');\n    }\n  };\n\n  // Modern browsers\n  if (mediaQuery.addEventListener) {\n    mediaQuery.addEventListener('change', handleChange);\n  } else {\n    // Legacy support\n    mediaQuery.addListener(handleChange);\n  }\n\n  console.log('\uD83D\uDC40 System theme watcher initialized');\n};\n\n/**\n * Create theme toggle button\n */\nconst createThemeToggleButton = (): HTMLElement => {\n  const button = document.createElement('button');\n  button.className = 'theme-toggle';\n  button.setAttribute('type', 'button');\n  button.setAttribute('aria-label', 'Toggle dark mode');\n  button.setAttribute('title', 'Toggle dark mode');\n  button.innerHTML = '<span class=\"theme-icon\">\uD83C\uDF19</span>';\n\n  return button;\n};\n\n/**\n * Setup theme toggle button\n */\nconst setupThemeToggleButton = (): void => {\n  // Check if button already exists\n  const existingButton = qsSafe('.theme-toggle');\n  if (existingButton) {\n    // Update existing button state\n    updateToggleButton(getCurrentTheme());\n    return;\n  }\n\n  // Find a suitable place to add the button\n  const header = qsSafe('.site-header, header, .site-nav');\n  if (!header) {\n    console.warn('\u26A0\uFE0F Could not find suitable location for theme toggle button');\n    return;\n  }\n\n  const button = createThemeToggleButton();\n\n  // Add button to header\n  header.appendChild(button);\n\n  // Add click handler\n  const cleanup = addEventListener(button, 'click', (e) => {\n    e.preventDefault();\n    toggleTheme();\n  });\n\n  // Store cleanup function\n  (button as any)._cleanup = cleanup;\n\n  // Initialize button state\n  updateToggleButton(getCurrentTheme());\n\n  console.log('\uD83C\uDFA8 Theme toggle button created and added to header');\n};\n\n/**\n * Initialize theme functionality\n */\nexport const initTheme = (defaultTheme?: ThemeMode): void => {\n  // Apply initial theme\n  const theme = defaultTheme || getStoredTheme();\n  applyTheme(theme);\n\n  // Watch for system theme changes\n  watchSystemTheme();\n\n  // Setup theme toggle button\n  setupThemeToggleButton();\n\n  console.log(`\uD83C\uDFA8 Theme functionality initialized with mode: ${theme}`);\n};\n\n/**\n * Cleanup theme functionality (for testing)\n */\nexport const cleanupTheme = (): void => {\n  const button = qsSafe('.theme-toggle');\n  if (button) {\n    const cleanup = (button as any)._cleanup;\n    if (typeof cleanup === 'function') {\n      cleanup();\n    }\n    button.remove();\n  }\n\n  console.log('\uD83E\uDDF9 Theme functionality cleaned up');\n};\n\n/**\n * Add CSS styles for theme toggle\n */\nexport const addThemeStyles = (): void => {\n  const styleId = 'theme-styles';\n\n  // Check if styles already exist\n  if (document.getElementById(styleId)) {\n    return;\n  }\n\n  const styles = `\n    /* Theme toggle button */\n    .theme-toggle {\n      background: transparent;\n      border: 1px solid #ddd;\n      border-radius: 50%;\n      width: 40px;\n      height: 40px;\n      padding: 0;\n      margin: 0 0.5rem;\n      cursor: pointer;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      transition: all 0.3s ease;\n      font-size: 1.2rem;\n      background: white;\n    }\n\n    .theme-toggle:hover {\n      border-color: #3498db;\n      transform: scale(1.1);\n    }\n\n    .theme-toggle:focus {\n      outline: 2px solid #3498db;\n      outline-offset: 2px;\n    }\n\n    .theme-toggle:active {\n      transform: scale(0.95);\n    }\n\n    .theme-toggle .theme-icon {\n      font-size: 1.2rem;\n      transition: opacity 0.3s ease;\n    }\n\n    /* Theme transitions */\n    .theme-transitioning,\n    .theme-transitioning * {\n      transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease !important;\n    }\n\n    /* Dark theme */\n    [data-theme=\"dark\"] {\n      color-scheme: dark;\n    }\n\n    /* Light theme (default) */\n    :root {\n      --bg-primary: #ffffff;\n      --bg-secondary: #f8f9fa;\n      --text-primary: #2c3e50;\n      --text-secondary: #5a6c7d;\n      --border-color: #e8e8e8;\n      --code-bg: #f6f8fa;\n      --accent: #3498db;\n    }\n\n    /* Dark theme */\n    [data-theme=\"dark\"] {\n      --bg-primary: #1a1a1a;\n      --bg-secondary: #2d2d2d;\n      --text-primary: #ffffff;\n      --text-secondary: #b0b0b0;\n      --border-color: #404040;\n      --code-bg: #2d2d2d;\n      --accent: #4a9eff;\n    }\n\n    /* Responsive adjustments */\n    @media (max-width: 768px) {\n      .theme-toggle {\n        width: 36px;\n        height: 36px;\n        font-size: 1rem;\n      }\n    }\n  `;\n\n  const styleElement = document.createElement('style');\n  styleElement.id = styleId;\n  styleElement.textContent = styles;\n  document.head.appendChild(styleElement);\n\n  console.log('\uD83C\uDFA8 Theme styles added to document');\n};", "/**\n * Mobile navigation functionality\n *\n * Features:\n * - Hamburger menu for mobile devices\n * - Smooth slide-in/out animations\n * - Click-outside-to-close functionality\n * - Keyboard navigation support\n * - Touch-friendly interactions\n * - Accessibility compliant\n * - Body scroll lock when menu is open\n */\n\nimport { qsSafe, addEventListener } from './utils/dom';\n\nconst MOBILE_BREAKPOINT = 768; // px\nconst ANIMATION_DURATION = 300; // ms\nconst FOCUSABLE_ELEMENTS = 'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])';\n\n/**\n * Check if device is mobile\n */\nconst isMobile = (): boolean => {\n  return window.innerWidth <= MOBILE_BREAKPOINT ||\n       ('ontouchstart' in window) ||\n       (navigator.maxTouchPoints > 0);\n};\n\n/**\n * Toggle body scroll lock\n */\nconst toggleBodyScrollLock = (lock: boolean): void => {\n  const body = document.body;\n\n  if (lock) {\n    body.classList.add('nav-open');\n    body.style.overflow = 'hidden';\n    body.style.position = 'fixed';\n    body.style.width = '100%';\n    body.style.top = `-${window.scrollY}px`;\n  } else {\n    const scrollY = Math.abs(parseInt(body.style.top || '0', 10));\n    body.classList.remove('nav-open');\n    body.style.overflow = '';\n    body.style.position = '';\n    body.style.width = '';\n    body.style.top = '';\n    window.scrollTo(0, scrollY);\n  }\n};\n\n/**\n * Close mobile menu\n */\nconst closeMobileMenu = (): void => {\n  const toggle = qsSafe('.nav-toggle') as HTMLElement;\n  const menu = qsSafe('.nav-mobile') as HTMLElement;\n\n  if (!toggle || !menu) return;\n\n  // Update toggle state\n  toggle.classList.remove('active');\n  toggle.setAttribute('aria-expanded', 'false');\n\n  // Close menu\n  menu.classList.remove('active');\n\n  // Restore body scroll\n  toggleBodyScrollLock(false);\n\n  // Focus back to toggle button\n  setTimeout(() => {\n    toggle.focus();\n  }, ANIMATION_DURATION);\n\n  console.log('\uD83D\uDCF1 Mobile menu closed');\n};\n\n/**\n * Open mobile menu\n */\nconst openMobileMenu = (): void => {\n  const toggle = qsSafe('.nav-toggle') as HTMLElement;\n  const menu = qsSafe('.nav-mobile') as HTMLElement;\n\n  if (!toggle || !menu) return;\n\n  // Update toggle state\n  toggle.classList.add('active');\n  toggle.setAttribute('aria-expanded', 'true');\n\n  // Open menu\n  menu.classList.add('active');\n\n  // Prevent body scroll\n  toggleBodyScrollLock(true);\n\n  // Focus first menu item\n  setTimeout(() => {\n    const firstMenuItem = menu.querySelector(FOCUSABLE_ELEMENTS) as HTMLElement;\n    if (firstMenuItem) {\n      firstMenuItem.focus();\n    }\n  }, 100);\n\n  console.log('\uD83D\uDCF1 Mobile menu opened');\n};\n\n/**\n * Toggle mobile menu\n */\nconst toggleMobileMenu = (): void => {\n  const toggle = qsSafe('.nav-toggle') as HTMLElement;\n  if (!toggle) return;\n\n  const isOpen = toggle.classList.contains('active');\n\n  if (isOpen) {\n    closeMobileMenu();\n  } else {\n    openMobileMenu();\n  }\n};\n\n/**\n * Handle click outside menu\n */\nconst handleOutsideClick = (event: MouseEvent): void => {\n  const menu = qsSafe('.nav-mobile');\n  const toggle = qsSafe('.nav-toggle');\n\n  if (!menu || !toggle) return;\n\n  const target = event.target as Node;\n  const isClickInsideMenu = menu.contains(target);\n  const isClickOnToggle = toggle.contains(target);\n\n  if (!isClickInsideMenu && !isClickOnToggle) {\n    closeMobileMenu();\n  }\n};\n\n/**\n * Handle escape key\n */\nconst handleEscapeKey = (event: KeyboardEvent): void => {\n  if (event.key === 'Escape') {\n    closeMobileMenu();\n  }\n};\n\n/**\n * Setup mobile navigation toggle\n */\nconst setupMobileToggle = (): void => {\n  const toggle = qsSafe('.nav-toggle') as HTMLElement;\n  if (!toggle) {\n    console.warn('\u26A0\uFE0F Mobile navigation toggle button not found');\n    return;\n  }\n\n  // Set initial state\n  toggle.classList.remove('active');\n  toggle.setAttribute('aria-expanded', 'false');\n  toggle.setAttribute('aria-controls', 'mobile-menu');\n  toggle.setAttribute('aria-label', 'Toggle navigation menu');\n\n  // Add click handler\n  const cleanup = addEventListener(toggle, 'click', (e) => {\n    e.preventDefault();\n    toggleMobileMenu();\n  });\n\n  // Store cleanup function\n  (toggle as any)._cleanup = cleanup;\n\n  console.log('\uD83D\uDCF1 Mobile navigation toggle setup complete');\n};\n\n/**\n * Setup click outside to close\n */\nconst setupClickOutsideToClose = (): void => {\n  const cleanup = addEventListener(document as any, 'click', handleOutsideClick);\n  (document as any)._clickOutsideCleanup = cleanup;\n  console.log('\uD83D\uDCF1 Click outside to close functionality setup');\n};\n\n/**\n * Setup keyboard navigation\n */\nconst setupKeyboardNavigation = (): void => {\n  const menu = qsSafe('.nav-mobile') as HTMLElement;\n  if (!menu) return;\n\n  // Add keydown handler for trap focus\n  const keydownHandler = (e: KeyboardEvent): void => {\n    if (e.key === 'Tab') {\n      const focusableElements = Array.from(menu.querySelectorAll(FOCUSABLE_ELEMENTS)) as HTMLElement[];\n      const firstElement = focusableElements[0];\n      const lastElement = focusableElements[focusableElements.length - 1];\n\n      if (e.shiftKey) {\n        if (document.activeElement === firstElement && firstElement) {\n          e.preventDefault();\n          lastElement?.focus();\n        }\n      } else {\n        if (document.activeElement === lastElement && lastElement) {\n          e.preventDefault();\n          firstElement?.focus();\n        }\n      }\n    }\n  };\n\n  const cleanup = addEventListener(menu, 'keydown', keydownHandler);\n  (menu as any)._keyboardCleanup = cleanup;\n\n  console.log('\uD83D\uDCF1 Keyboard navigation setup complete');\n};\n\n/**\n * Setup escape key handler\n */\nconst setupEscapeKeyHandler = (): void => {\n  const cleanup = addEventListener(document as any, 'keydown', handleEscapeKey);\n  (document as any)._escapeCleanup = cleanup;\n  console.log('\uD83D\uDCF1 Escape key handler setup complete');\n};\n\n/**\n * Setup responsive behavior\n */\nconst setupResponsiveBehavior = (): void => {\n  let isCurrentlyMobile = isMobile();\n\n  const handleResize = (): void => {\n    const isNowMobile = isMobile();\n\n    // If switching from desktop to mobile and menu is open, close it\n    if (!isCurrentlyMobile && isNowMobile) {\n      const menu = qsSafe('.nav-mobile') as HTMLElement;\n      if (menu && menu.classList.contains('active')) {\n        closeMobileMenu();\n      }\n    }\n\n    // If switching from mobile to desktop, ensure menu is closed\n    if (isCurrentlyMobile && !isNowMobile) {\n      closeMobileMenu();\n    }\n\n    isCurrentlyMobile = isNowMobile;\n  };\n\n  // Debounce resize handler\n  let resizeTimeout: NodeJS.Timeout;\n  const debouncedResize = () => {\n    clearTimeout(resizeTimeout);\n    resizeTimeout = setTimeout(handleResize, 150);\n  };\n\n  const cleanup = addEventListener(window as any, 'resize', debouncedResize);\n  (window as any)._resizeCleanup = cleanup;\n\n  console.log('\uD83D\uDCF1 Responsive behavior setup complete');\n};\n\n/**\n * Create mobile navigation toggle button\n */\nconst createMobileToggle = (): HTMLElement => {\n  const button = document.createElement('button');\n  button.className = 'nav-toggle';\n  button.setAttribute('type', 'button');\n  button.setAttribute('aria-label', 'Toggle navigation menu');\n  button.setAttribute('aria-controls', 'mobile-menu');\n  button.setAttribute('aria-expanded', 'false');\n  button.innerHTML = `\n    <span class=\"hamburger\">\n      <span class=\"hamburger-line\"></span>\n      <span class=\"hamburger-line\"></span>\n      <span class=\"hamburger-line\"></span>\n    </span>\n  `;\n  return button;\n};\n\n/**\n * Setup mobile navigation menu\n */\nconst setupMobileMenu = (): void => {\n  // Check if mobile menu already exists\n  const existingMenu = qsSafe('.nav-mobile');\n  if (existingMenu) {\n    console.log('\uD83D\uDCF1 Mobile menu already exists');\n    return;\n  }\n\n  // Create mobile menu if it doesn't exist\n  const menu = document.createElement('nav');\n  menu.className = 'nav-mobile';\n  menu.setAttribute('id', 'mobile-menu');\n  menu.setAttribute('role', 'navigation');\n  menu.setAttribute('aria-label', 'Mobile navigation');\n\n  // Copy navigation items from desktop menu\n  const desktopNav = qsSafe('.site-nav, .nav-links');\n  if (desktopNav) {\n    const navLinks = desktopNav.cloneNode(true);\n    menu.appendChild(navLinks);\n  }\n\n  // Add menu to page\n  const header = qsSafe('.site-header, header');\n  if (header) {\n    header.appendChild(menu);\n  }\n\n  console.log('\uD83D\uDCF1 Mobile navigation menu created');\n};\n\n/**\n * Initialize mobile navigation\n */\nexport const initNavigation = (): void => {\n  // Only initialize on mobile devices\n  if (!isMobile()) {\n    console.log('\uD83D\uDCF1 Desktop device detected - mobile navigation not initialized');\n    return;\n  }\n\n  // Setup mobile menu\n  setupMobileMenu();\n\n  // Setup toggle button (check if exists or create)\n  let toggle = qsSafe('.nav-toggle') as HTMLElement;\n  if (!toggle) {\n    toggle = createMobileToggle();\n    const header = qsSafe('.site-header, header');\n    if (header) {\n      header.appendChild(toggle);\n    }\n  }\n\n  // Setup all functionality\n  setupMobileToggle();\n  setupClickOutsideToClose();\n  setupKeyboardNavigation();\n  setupEscapeKeyHandler();\n  setupResponsiveBehavior();\n\n  // Make mobile menu visible\n  const menu = qsSafe('.nav-mobile') as HTMLElement;\n  if (menu) {\n    menu.style.display = 'block';\n  }\n\n  console.log('\uD83D\uDCF1 Mobile navigation initialized successfully');\n};\n\n/**\n * Cleanup mobile navigation\n */\nexport const cleanupMobileNav = (): void => {\n  // Remove event listeners\n  const cleanupFunctions = [\n    (document as any)._clickOutsideCleanup,\n    (document as any)._escapeCleanup,\n    (window as any)._resizeCleanup\n  ];\n\n  cleanupFunctions.forEach(cleanup => {\n    if (typeof cleanup === 'function') {\n      cleanup();\n    }\n  });\n\n  // Remove toggle button cleanup\n  const toggle = qsSafe('.nav-toggle') as HTMLElement;\n  if (toggle && (toggle as any)._cleanup) {\n    (toggle as any)._cleanup();\n  }\n\n  // Remove menu cleanup\n  const menu = qsSafe('.nav-mobile') as HTMLElement;\n  if (menu && (menu as any)._keyboardCleanup) {\n    (menu as any)._keyboardCleanup();\n  }\n\n  console.log('\uD83D\uDCF1 Mobile navigation cleaned up');\n};\n\n/**\n * Alias for backward compatibility\n */\nexport { initNavigation as initMobileNav };\n\n/**\n * Add CSS styles for mobile navigation\n */\nexport const addMobileNavStyles = (): void => {\n  const styleId = 'mobile-nav-styles';\n\n  // Check if styles already exist\n  if (document.getElementById(styleId)) {\n    return;\n  }\n\n  const styles = `\n    /* Mobile navigation toggle */\n    .nav-toggle {\n      display: none;\n      background: transparent;\n      border: none;\n      padding: 0.5rem;\n      cursor: pointer;\n      z-index: 1001;\n    }\n\n    .nav-toggle:focus {\n      outline: 2px solid #3498db;\n      outline-offset: 2px;\n    }\n\n    .hamburger {\n      display: flex;\n      flex-direction: column;\n      width: 24px;\n      height: 20px;\n      justify-content: space-between;\n    }\n\n    .hamburger-line {\n      width: 100%;\n      height: 2px;\n      background: #2c3e50;\n      border-radius: 1px;\n      transition: all 0.3s ease;\n      transform-origin: center;\n    }\n\n    /* Active state */\n    .nav-toggle.active .hamburger-line:nth-child(1) {\n      transform: rotate(45deg) translate(6px, 6px);\n    }\n\n    .nav-toggle.active .hamburger-line:nth-child(2) {\n      opacity: 0;\n    }\n\n    .nav-toggle.active .hamburger-line:nth-child(3) {\n      transform: rotate(-45deg) translate(7px, -6px);\n    }\n\n    /* Mobile navigation menu */\n    .nav-mobile {\n      display: none;\n      position: fixed;\n      top: 0;\n      left: 0;\n      right: 0;\n      background: #fff;\n      border-bottom: 1px solid #e8e8e8;\n      box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n      z-index: 1000;\n      max-height: 100vh;\n      overflow-y: auto;\n      opacity: 0;\n      transform: translateY(-100%);\n      transition: all 0.3s ease;\n    }\n\n    .nav-mobile.active {\n      display: block;\n      opacity: 1;\n      transform: translateY(0);\n    }\n\n    .nav-mobile .nav-links {\n      display: flex;\n      flex-direction: column;\n      padding: 1rem 0;\n      gap: 0;\n      margin: 0;\n      list-style: none;\n      border-left: none;\n      padding-left: 0;\n    }\n\n    .nav-mobile .nav-link {\n      display: block;\n      width: 100%;\n      padding: 0.75rem 1.5rem;\n      text-decoration: none;\n      color: #2c3e50;\n      font-weight: 500;\n      transition: background-color 0.3s ease;\n      border-bottom: 1px solid #f0f0f0;\n    }\n\n    .nav-mobile .nav-link:hover,\n    .nav-mobile .nav-link:focus {\n      background-color: #f8f9fa;\n      color: #3498db;\n    }\n\n    .nav-mobile .nav-link:last-child {\n      border-bottom: none;\n    }\n\n    /* Body scroll lock */\n    .nav-open {\n      overflow: hidden;\n      position: fixed;\n      width: 100%;\n    }\n\n    /* Responsive styles */\n    @media (max-width: 768px) {\n      .nav-toggle {\n        display: block;\n      }\n\n      .nav-links {\n        display: none;\n      }\n\n      .site-nav-inner {\n        gap: 1rem;\n      }\n    }\n\n    /* Dark theme support */\n    [data-theme=\"dark\"] .nav-mobile {\n      background: #2d2d2d;\n      border-bottom-color: #404040;\n    }\n\n    [data-theme=\"dark\"] .hamburger-line {\n      background: #ffffff;\n    }\n\n    [data-theme=\"dark\"] .nav-mobile .nav-link {\n      color: #ffffff;\n      border-bottom-color: #404040;\n    }\n\n    [data-theme=\"dark\"] .nav-mobile .nav-link:hover,\n    [data-theme=\"dark\"] .nav-mobile .nav-link:focus {\n      background-color: #404040;\n      color: #4a9eff;\n    }\n  `;\n\n  const styleElement = document.createElement('style');\n  styleElement.id = styleId;\n  styleElement.textContent = styles;\n  document.head.appendChild(styleElement);\n\n  console.log('\uD83D\uDCF1 Mobile navigation styles added to document');\n};", "/**\n * Copy code to clipboard functionality\n *\n * Features:\n * - Copy code blocks with clipboard API\n * - Visual feedback for success/error states\n * - Fallback method for older browsers\n * - Touch-friendly interactions\n * - Accessibility support\n */\n\nimport { qsa, create, addEventListener } from './utils/dom';\n\nconst COPY_BUTTON_CLASS = 'copy-button';\nconst COPY_SUCCESS_CLASS = 'copied';\nconst COPY_ERROR_CLASS = 'copy-error';\nconst COPY_TIMEOUT = 2000;\n\n/**\n * Copy text to clipboard with fallback\n */\nconst copyToClipboard = async (text: string): Promise<boolean> => {\n  try {\n    // Modern clipboard API\n    if (navigator.clipboard && window.isSecureContext) {\n      await navigator.clipboard.writeText(text);\n      return true;\n    }\n\n    // Fallback method for older browsers\n    const textArea = document.createElement('textarea');\n    textArea.value = text;\n    textArea.style.position = 'fixed';\n    textArea.style.left = '-999999px';\n    textArea.style.top = '0';\n    textArea.style.width = '2em';\n    textArea.style.height = '2em';\n    textArea.style.padding = '0';\n    textArea.style.border = 'none';\n    textArea.style.outline = 'none';\n    textArea.style.boxShadow = 'none';\n    textArea.style.background = 'transparent';\n\n    document.body.appendChild(textArea);\n    textArea.focus();\n    textArea.select();\n\n    const successful = document.execCommand('copy');\n    document.body.removeChild(textArea);\n\n    return successful;\n  } catch (error) {\n    console.error('Failed to copy text:', error);\n    return false;\n  }\n};\n\n/**\n * Show copy success feedback\n */\nconst showCopySuccess = (button: HTMLElement): void => {\n  const originalText = button.textContent || 'Copy';\n  const originalClasses = button.className;\n\n  button.textContent = 'Copied!';\n  button.classList.add(COPY_SUCCESS_CLASS);\n\n  setTimeout(() => {\n    button.textContent = originalText;\n    button.className = originalClasses;\n  }, COPY_TIMEOUT);\n};\n\n/**\n * Show copy error feedback\n */\nconst showCopyError = (button: HTMLElement): void => {\n  const originalText = button.textContent || 'Copy';\n  const originalClasses = button.className;\n\n  button.textContent = 'Failed!';\n  button.classList.add(COPY_ERROR_CLASS);\n\n  setTimeout(() => {\n    button.textContent = originalText;\n    button.className = originalClasses;\n  }, COPY_TIMEOUT);\n};\n\n/**\n * Handle copy button click\n */\nconst handleCopyClick = async (button: HTMLElement, codeBlock: HTMLElement): Promise<void> => {\n  const code = codeBlock.textContent || '';\n\n  if (!code.trim()) {\n    console.warn('No code to copy');\n    return;\n  }\n\n  // Disable button temporarily to prevent multiple clicks\n  (button as HTMLButtonElement).disabled = true;\n  button.style.opacity = '0.6';\n  button.style.cursor = 'wait';\n\n  try {\n    const success = await copyToClipboard(code);\n\n    if (success) {\n      showCopySuccess(button);\n    } else {\n      showCopyError(button);\n    }\n  } catch (error) {\n    console.error('Copy failed:', error);\n    showCopyError(button);\n  } finally {\n    // Re-enable button\n    (button as HTMLButtonElement).disabled = false;\n    button.style.opacity = '';\n    button.style.cursor = '';\n  }\n};\n\n/**\n * Create copy button for code block\n */\nconst createCopyButton = (): HTMLElement => {\n  const button = create('button', {\n    class: COPY_BUTTON_CLASS,\n    type: 'button',\n    'aria-label': 'Copy code to clipboard',\n    title: 'Copy code',\n    'data-clipboard-text': ''\n  }, 'Copy');\n\n  return button;\n};\n\n/**\n * Setup copy button for a code block\n */\nconst setupCopyButton = (codeBlock: HTMLElement): void => {\n  // Skip if already has copy button\n  const parent = codeBlock.parentElement;\n  if (!parent || parent.classList.contains('has-copy-button')) {\n    return;\n  }\n\n  // Check if it's a code block inside pre\n  const preElement = parent.tagName === 'PRE' ? parent : codeBlock.closest('pre');\n  if (!preElement) {\n    return;\n  }\n\n  // Mark as processed\n  preElement.classList.add('has-copy-button');\n\n  // Create and append button\n  const button = createCopyButton();\n  preElement.style.position = 'relative';\n  preElement.appendChild(button);\n\n  // Add click handler\n  const cleanup = addEventListener(button, 'click', async (e) => {\n    e.preventDefault();\n    await handleCopyClick(button, codeBlock);\n  });\n\n  // Store cleanup function for potential removal later\n  (button as any)._cleanup = cleanup;\n\n  // Add keyboard support (Ctrl+C / Cmd+C when code block is focused)\n  const keyboardHandler = (e: KeyboardEvent): void => {\n    if ((e.ctrlKey || e.metaKey) && e.key === 'c') {\n      // Only handle if code block or its children are focused\n      const activeElement = document.activeElement;\n      if (activeElement === codeBlock || codeBlock.contains(activeElement)) {\n        e.preventDefault();\n        handleCopyClick(button, codeBlock);\n      }\n    }\n  };\n\n  const keydownCleanup = addEventListener(codeBlock, 'keydown', keyboardHandler);\n  (codeBlock as any)._keycleanup = keydownCleanup;\n};\n\n/**\n * Initialize copy functionality for all code blocks\n */\nexport const initCopyCode = (): void => {\n  // Find all code blocks (including those from highlight.js)\n  const codeBlocks = Array.from(qsa('pre code, highlight > code, .highlight > pre > code')) as HTMLElement[];\n\n  if (codeBlocks.length === 0) {\n    console.log('\uD83D\uDCDD No code blocks found for copy functionality');\n    return;\n  }\n\n  codeBlocks.forEach((codeBlock, index) => {\n    setupCopyButton(codeBlock);\n  });\n\n  console.log(`\uD83D\uDCCB Copy buttons initialized for ${codeBlocks.length} code blocks`);\n};\n\n/**\n * Cleanup copy functionality (for testing or dynamic content)\n */\nexport const cleanupCopyCode = (): void => {\n  const buttons = qsa(`.${COPY_BUTTON_CLASS}`);\n  buttons.forEach(button => {\n    const cleanup = (button as any)._cleanup;\n    if (typeof cleanup === 'function') {\n      cleanup();\n    }\n    button.remove();\n  });\n\n  const codeBlocks = Array.from(qsa('pre code, highlight > code, .highlight > pre > code')) as HTMLElement[];\n  codeBlocks.forEach(codeBlock => {\n    const keycleanup = (codeBlock as any)._keycleanup;\n    if (typeof keycleanup === 'function') {\n      keycleanup();\n    }\n  });\n\n  const preElements = qsa('.has-copy-button');\n  preElements.forEach(pre => {\n    pre.classList.remove('has-copy-button');\n  });\n\n  console.log('\uD83E\uDDF9 Copy code functionality cleaned up');\n};\n\n/**\n * Add CSS styles for copy buttons\n */\nexport const addCopyButtonStyles = (): void => {\n  const styleId = 'copy-button-styles';\n\n  // Check if styles already exist\n  if (document.getElementById(styleId)) {\n    return;\n  }\n\n  const styles = `\n    .copy-button {\n      position: absolute;\n      top: 0.5rem;\n      right: 0.5rem;\n      padding: 0.25rem 0.5rem;\n      background: #3498db;\n      color: white;\n      border: none;\n      border-radius: 4px;\n      font-size: 0.75rem;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n      cursor: pointer;\n      transition: all 0.2s ease;\n      z-index: 10;\n      opacity: 0.8;\n    }\n\n    .copy-button:hover {\n      background: #2980b9;\n      opacity: 1;\n      transform: translateY(-1px);\n    }\n\n    .copy-button:focus {\n      outline: 2px solid #3498db;\n      outline-offset: 2px;\n    }\n\n    .copy-button:disabled {\n      cursor: not-allowed;\n      opacity: 0.6;\n    }\n\n    .copy-button.copied {\n      background: #27ae60;\n    }\n\n    .copy-button.copy-error {\n      background: #e74c3c;\n    }\n\n    /* Ensure code blocks have relative positioning */\n    pre {\n      position: relative;\n    }\n\n    /* Responsive adjustments */\n    @media (max-width: 768px) {\n      .copy-button {\n        font-size: 0.7rem;\n        padding: 0.2rem 0.4rem;\n        top: 0.3rem;\n        right: 0.3rem;\n      }\n    }\n\n    /* Dark mode support */\n    @media (prefers-color-scheme: dark) {\n      .copy-button {\n        background: #4a9eff;\n      }\n\n      .copy-button:hover {\n        background: #3a8eed;\n      }\n\n      .copy-button.copied {\n        background: #2ecc71;\n      }\n    }\n  `;\n\n  const styleElement = document.createElement('style');\n  styleElement.id = styleId;\n  styleElement.textContent = styles;\n  document.head.appendChild(styleElement);\n};", "/**\n * Table of Contents functionality\n *\n * Features:\n * - Auto-generate from h2-h6 headings\n * - Hierarchical structure with indentation\n * - Smooth scroll navigation\n * - Active section highlighting\n * - Responsive design for mobile\n * - Accessibility support\n * - Dynamic updates\n */\n\nimport { qsa, create, scrollToElement, addEventListener, throttle } from './utils/dom';\nimport type { TocItem } from '../interfaces/types';\n\nconst TOC_CONTAINER_SELECTOR = '#toc-container';\nconst TOC_ID_PREFIX = 'toc-';\nconst ACTIVE_CLASS = 'toc-active';\nconst HEADING_SELECTORS = 'h2, h3, h4, h5, h6';\nconst SCROLL_OFFSET = 80; // pixels\nconst THROTTLE_DELAY = 100; // ms\n\n/**\n * Generate hierarchical TOC structure\n */\nconst generateTOC = (headings: Element[]): TocItem[] => {\n  const toc: TocItem[] = [];\n  const stack: TocItem[] = [];\n\n  headings.forEach((heading, index) => {\n    const id = `${TOC_ID_PREFIX}${index}`;\n    heading.id = id;\n\n    const item: TocItem = {\n      id,\n      text: heading.textContent?.trim() || `Heading ${index + 1}`,\n      level: parseInt(heading.tagName.charAt(1)),\n      children: []\n    };\n\n    // Build hierarchy using stack\n    while (stack.length > 0 && (stack[stack.length - 1]?.level ?? 0) >= item.level) {\n      stack.pop();\n    }\n\n    if (stack.length === 0) {\n      toc.push(item);\n    } else {\n      stack[stack.length - 1]?.children.push(item);\n    }\n\n    stack.push(item);\n  });\n\n  return toc;\n};\n\n/**\n * Render TOC in container\n */\nconst renderTOC = (container: Element, toc: TocItem[]): void => {\n  if (toc.length === 0) {\n    container.innerHTML = '<p class=\"toc-empty\">No headings found</p>';\n    return;\n  }\n\n  const tocElement = create('nav', { class: 'toc' });\n  const listElement = create('ol', { class: 'toc-list' });\n\n  // Add TOC title\n  const titleElement = create('h2', { class: 'toc-title' }, 'Table of Contents');\n  tocElement.appendChild(titleElement);\n\n  renderTOCItems(listElement, toc, 0);\n  tocElement.appendChild(listElement);\n\n  container.innerHTML = '';\n  container.appendChild(tocElement);\n};\n\n/**\n * Render TOC items recursively\n */\nconst renderTOCItems = (parentElement: Element, items: TocItem[], depth: number): void => {\n  items.forEach((item, index) => {\n    const listItem = create('li', { class: 'toc-item' });\n\n    // Create link\n    const link = create('a', {\n      href: `#${item.id}`,\n      class: 'toc-link',\n      'data-level': item.level.toString()\n    }, item.text);\n\n    // Add click handler for smooth scroll\n    const linkCleanup = addEventListener(link, 'click', (e) => {\n      e.preventDefault();\n      const targetElement = document.getElementById(item.id);\n      if (targetElement) {\n        scrollToElement(targetElement, SCROLL_OFFSET);\n        updateActiveTOC(item.id);\n      }\n    });\n\n    listItem.appendChild(link);\n\n    // Render children if any\n    if (item.children.length > 0) {\n      const childList = create('ol', { class: `toc-list toc-list-${depth + 1}` });\n      renderTOCItems(childList, item.children, depth + 1);\n      listItem.appendChild(childList);\n    }\n\n    parentElement.appendChild(listItem);\n  });\n};\n\n/**\n * Update active TOC item\n */\nconst updateActiveTOC = (activeId: string): void => {\n  // Remove active class from all items\n  const activeElements = document.querySelectorAll(`.${ACTIVE_CLASS}`);\n  activeElements.forEach(el => el.classList.remove(ACTIVE_CLASS));\n\n  // Add active class to current item\n  const activeLink = document.querySelector(`a[href=\"#${activeId}\"]`);\n  if (activeLink) {\n    activeLink.classList.add(ACTIVE_CLASS);\n  }\n\n  // Update parent active states\n  let currentLink: Element | null | undefined = activeLink;\n  while (currentLink) {\n    const parentItem = currentLink.closest('.toc-item') as Element;\n    if (parentItem) {\n      const parentLink = parentItem.querySelector('.toc-link');\n      if (parentLink) {\n        parentLink.classList.add(ACTIVE_CLASS);\n      }\n    }\n    currentLink = parentItem?.parentElement?.closest('.toc-item');\n  }\n};\n\n/**\n * Check if element is in viewport with offset\n */\nconst isElementInViewport = (element: Element, offset: number = 0): boolean => {\n  const rect = element.getBoundingClientRect();\n  const windowHeight = window.innerHeight || document.documentElement.clientHeight;\n\n  return (\n    rect.top <= windowHeight &&\n    rect.bottom >= 0 &&\n    rect.left >= 0 &&\n    rect.right <= (window.innerWidth || document.documentElement.clientWidth) &&\n    rect.top <= offset\n  );\n};\n\n/**\n * Get the current active heading\n */\nconst getCurrentActiveHeading = (): string | null => {\n  const headings = qsa(HEADING_SELECTORS);\n\n  for (let i = headings.length - 1; i >= 0; i--) {\n    const heading = headings[i];\n    if (heading && isElementInViewport(heading, SCROLL_OFFSET)) {\n      return heading.id;\n    }\n  }\n\n  return null;\n};\n\n/**\n * Setup scroll spy functionality\n */\nconst setupScrollSpy = (): void => {\n  const scrollHandler = throttle(() => {\n    const activeId = getCurrentActiveHeading();\n    if (activeId) {\n      updateActiveTOC(activeId);\n    }\n  }, THROTTLE_DELAY);\n\n  const cleanup = addEventListener(window as any, 'scroll', scrollHandler);\n  (window as any)._scrollSpyCleanup = cleanup;\n\n  // Initial check\n  setTimeout(() => {\n    const activeId = getCurrentActiveHeading();\n    if (activeId) {\n      updateActiveTOC(activeId);\n    }\n  }, 100);\n\n  console.log('\uD83D\uDCD1 Scroll spy functionality setup');\n};\n\n/**\n * Observe content changes and update TOC\n */\nconst setupContentObserver = (): void => {\n  const targetNode = document.querySelector('.post-content, .page-content');\n  if (!targetNode) return;\n\n  const observer = new MutationObserver(() => {\n    // Debounce rapid changes\n    setTimeout(() => {\n      const headings = Array.from(qsa(HEADING_SELECTORS));\n      if (headings.length === 0) return;\n\n      const toc = generateTOC(headings);\n      const container = document.querySelector(TOC_CONTAINER_SELECTOR);\n      if (container) {\n        renderTOC(container, toc);\n        setupScrollSpy();\n      }\n    }, 100);\n  });\n\n  observer.observe(targetNode, {\n    childList: true,\n    subtree: true\n  });\n\n  console.log('\uD83D\uDCD1 Content observer setup');\n};\n\n/**\n * Find TOC container or create one\n */\nconst getOrCreateTOCContainer = (): Element | null => {\n  // Try to find existing container\n  let container = document.querySelector(TOC_CONTAINER_SELECTOR);\n  if (container) return container;\n\n  // Find suitable location to insert TOC\n  const postContent = document.querySelector('.post-content');\n  const pageContent = document.querySelector('.page-content');\n\n  const targetContent = postContent || pageContent;\n  if (!targetContent) {\n    console.warn('\u26A0\uFE0F Could not find suitable location for TOC');\n    return null;\n  }\n\n  // Create container\n  container = create('div', {\n    id: TOC_CONTAINER_SELECTOR.replace('#', ''),\n    class: 'toc-container'\n  });\n\n  // Insert after first paragraph or at the beginning\n  const firstParagraph = targetContent.querySelector('p');\n  if (firstParagraph) {\n    firstParagraph.parentNode?.insertBefore(container, firstParagraph.nextSibling);\n  } else {\n    targetContent.insertBefore(container, targetContent.firstChild);\n  }\n\n  return container;\n};\n\n/**\n * Initialize TOC functionality\n */\nexport const initTOC = (): void => {\n  console.log('\uD83D\uDCD1 Initializing Table of Contents...');\n\n  // Get or create TOC container\n  const container = getOrCreateTOCContainer();\n  if (!container) {\n    console.log('\uD83D\uDCD1 No suitable location found for TOC');\n    return;\n  }\n\n  // Find headings in the page\n  const headings = Array.from(qsa(HEADING_SELECTORS));\n  if (headings.length === 0) {\n    console.log('\uD83D\uDCD1 No headings found - TOC not created');\n    container.innerHTML = '<p class=\"toc-empty\">No headings found on this page</p>';\n    return;\n  }\n\n  // Generate and render TOC\n  const toc = generateTOC(headings);\n  renderTOC(container, toc);\n\n  // Setup scroll spy\n  setupScrollSpy();\n\n  // Setup content observer for dynamic changes\n  setupContentObserver();\n\n  console.log(`\uD83D\uDCD1 Table of Contents initialized with ${headings.length} headings`);\n};\n\n/**\n * Cleanup TOC functionality\n */\nexport const cleanupTOC = (): void => {\n  // Remove event listeners\n  const scrollCleanup = (window as any)._scrollSpyCleanup;\n  if (typeof scrollCleanup === 'function') {\n    scrollCleanup();\n  }\n\n  // Clear TOC container\n  const container = document.querySelector(TOC_CONTAINER_SELECTOR);\n  if (container) {\n    container.innerHTML = '';\n  }\n\n  console.log('\uD83D\uDCD1 Table of Contents cleaned up');\n};\n\n/**\n * Add CSS styles for TOC\n */\nexport const addTOCStyles = (): void => {\n  const styleId = 'toc-styles';\n\n  // Check if styles already exist\n  if (document.getElementById(styleId)) {\n    return;\n  }\n\n  const styles = `\n    .toc-container {\n      margin: 2rem 0;\n      padding: 1.5rem;\n      background: #f8f9fa;\n      border: 1px solid #e8e8e8;\n      border-radius: 8px;\n    }\n\n    .toc-title {\n      font-size: 1.2rem;\n      font-weight: 600;\n      margin: 0 0 1rem 0;\n      color: #2c3e50;\n    }\n\n    .toc-list {\n      list-style: none;\n      padding: 0;\n      margin: 0;\n    }\n\n    .toc-item {\n      margin-bottom: 0.5rem;\n    }\n\n    .toc-link {\n      display: block;\n      padding: 0.25rem 0.5rem;\n      text-decoration: none;\n      color: #5a6c7d;\n      border-radius: 4px;\n      transition: all 0.2s ease;\n      font-size: 0.9rem;\n      line-height: 1.4;\n    }\n\n    .toc-link:hover,\n    .toc-link:focus {\n      color: #3498db;\n      background: rgba(52, 152, 219, 0.1);\n      text-decoration: none;\n    }\n\n    .toc-link.toc-active {\n      color: #3498db;\n      background: rgba(52, 152, 219, 0.15);\n      font-weight: 500;\n    }\n\n    /* Nested TOC items */\n    .toc-list-1 {\n      margin-left: 1rem;\n      padding-left: 0;\n    }\n\n    .toc-list-1 .toc-link {\n      font-size: 0.85rem;\n    }\n\n    .toc-list-2 {\n      margin-left: 2rem;\n      padding-left: 0;\n    }\n\n    .toc-list-2 .toc-link {\n      font-size: 0.8rem;\n    }\n\n    .toc-list-3 {\n      margin-left: 3rem;\n      padding-left: 0;\n    }\n\n    .toc-list-3 .toc-link {\n      font-size: 0.75rem;\n    }\n\n    /* Empty state */\n    .toc-empty {\n      text-align: center;\n      color: #7f8c8d;\n      font-style: italic;\n      margin: 0;\n    }\n\n    /* Responsive design */\n    @media (max-width: 768px) {\n      .toc-container {\n        margin: 1rem 0;\n        padding: 1rem;\n      }\n\n      .toc-title {\n        font-size: 1.1rem;\n      }\n\n      .toc-link {\n        font-size: 0.85rem;\n        padding: 0.2rem 0.4rem;\n      }\n\n      .toc-list-1 {\n        margin-left: 0.5rem;\n      }\n\n      .toc-list-2 {\n        margin-left: 1rem;\n      }\n\n      .toc-list-3 {\n        margin-left: 1.5rem;\n      }\n    }\n\n    /* Dark theme support */\n    [data-theme=\"dark\"] .toc-container {\n      background: #2d2d2d;\n      border-color: #404040;\n    }\n\n    [data-theme=\"dark\"] .toc-title {\n      color: #ffffff;\n    }\n\n    [data-theme=\"dark\"] .toc-link {\n      color: #b0b0b0;\n    }\n\n    [data-theme=\"dark\"] .toc-link:hover,\n    [data-theme=\"dark\"] .toc-link:focus {\n      color: #4a9eff;\n      background: rgba(74, 158, 255, 0.1);\n    }\n\n    [data-theme=\"dark\"] .toc-link.toc-active {\n      color: #4a9eff;\n      background: rgba(74, 158, 255, 0.15);\n    }\n\n    [data-theme=\"dark\"] .toc-empty {\n      color: #666666;\n    }\n  `;\n\n  const styleElement = document.createElement('style');\n  styleElement.id = styleId;\n  styleElement.textContent = styles;\n  document.head.appendChild(styleElement);\n\n  console.log('\uD83D\uDCD1 TOC styles added to document');\n};", "/**\n * Jekyll Blog TypeScript Frontend\n *\n * Architecture:\n * - Modular design with feature-based organization\n * - Type-safe DOM manipulation with null safety\n * - Performance optimized with lazy loading\n * - Error handling with graceful degradation\n */\n\n// Feature modules\nimport { initTheme, type ThemeMode } from './modules/theme';\nimport { initNavigation } from './modules/navigation';\nimport { initCopyCode } from './modules/copy-code';\nimport { initTOC } from './modules/toc';\n// import { initSearch } from './modules/search';\n// import { initShareButtons } from './modules/share';\n\n// Utilities\nimport { ready as domReady } from './modules/utils/dom';\n// import { initErrorHandling, initPerformanceMonitoring } from './modules/utils/errors';\n\n/**\n * Application configuration interface\n */\ninterface AppConfig {\n  theme: 'light' | 'dark' | 'system';\n  searchEnabled: boolean;\n  tocEnabled: boolean;\n  copyCodeEnabled: boolean;\n  shareButtonsEnabled: boolean;\n  isPost: boolean;\n  isHomePage: boolean;\n  environment: 'development' | 'production';\n}\n\n/**\n * Get configuration from page data or environment\n */\nconst getAppConfig = (): AppConfig => {\n  const script = document.querySelector<HTMLScriptElement>('#site-config');\n\n  if (script?.textContent) {\n    try {\n      return JSON.parse(script.textContent);\n    } catch (error) {\n      console.warn('Failed to parse site config:', error);\n    }\n  }\n\n  // Fallback configuration based on DOM inspection\n  return {\n    theme: 'system',\n    searchEnabled: !!document.querySelector('#search-input'),\n    tocEnabled: document.body.classList.contains('post'),\n    copyCodeEnabled: !!document.querySelector('pre code'),\n    shareButtonsEnabled: !!document.querySelector('.share-links'),\n    isPost: document.body.classList.contains('post'),\n    isHomePage: document.body.classList.contains('home'),\n    environment: (process.env.NODE_ENV as AppConfig['environment']) || 'development'\n  };\n};\n\n/**\n * Initialize application with error handling\n */\nconst initializeApp = async (): Promise<void> => {\n  const config = getAppConfig();\n\n  try {\n    console.log('\uD83D\uDE80 Jekyll TypeScript Frontend Starting...');\n    console.log('\uD83D\uDCCA Config:', config);\n\n    // Initialize core infrastructure\n    // initErrorHandling();\n    // initPerformanceMonitoring();\n\n    // Initialize features based on configuration\n    initTheme(config.theme);\n    initNavigation();\n\n    if (config.copyCodeEnabled) {\n      await initCopyCode();\n    }\n\n    if (config.tocEnabled && config.isPost) {\n      await initTOC();\n    }\n\n    if (config.searchEnabled) {\n      // await initSearch();\n      console.log('\uD83D\uDD0D Search functionality not implemented yet');\n    }\n\n    if (config.shareButtonsEnabled && config.isPost) {\n      // await initShareButtons();\n      console.log('\uD83D\uDCE4 Share buttons not implemented yet');\n    }\n\n    // Mark as ready\n    document.body.classList.add('js-enabled');\n    document.body.classList.remove('js-loading');\n\n    console.log('\u2705 Jekyll TypeScript frontend initialized successfully (Phase 2 complete)');\n\n  } catch (error) {\n    console.error('\u274C Failed to initialize app:', error);\n\n    // Fallback behavior\n    document.body.classList.add('js-fallback');\n    document.body.classList.remove('js-loading');\n\n    // Still enable basic functionality\n    try {\n      initTheme(config.theme);\n      initNavigation();\n    } catch (fallbackError) {\n      console.error('\u274C Even fallback initialization failed:', fallbackError);\n    }\n  }\n};\n\n/**\n * Application bootstrap\n */\ndomReady(() => {\n  document.body.classList.add('js-loading');\n  initializeApp();\n});\n\n// Export for external use and testing\nexport { initializeApp, getAppConfig };\nexport type { AppConfig };"],
  "mappings": "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",
  "names": ["qsSafe", "selector", "parent", "qsa", "create", "tag", "attributes", "textContent", "element", "key", "value", "ready", "callback", "throttle", "func", "limit", "inThrottle", "args", "scrollToElement", "element", "offset", "behavior", "offsetPosition", "addEventListener", "event", "handler", "options", "STORAGE_KEY", "THEME_ATTRIBUTE", "THEME_TRANSITION_DURATION", "getSystemTheme", "getStoredTheme", "stored", "error", "getCurrentTheme", "applyTheme", "theme", "actualTheme", "updateToggleButton", "storeTheme", "toggleTheme", "next", "updateToggleButton", "actualTheme", "toggle", "qsSafe", "isActive", "icon", "watchSystemTheme", "mediaQuery", "handleChange", "getStoredTheme", "applyTheme", "createThemeToggleButton", "button", "setupThemeToggleButton", "getCurrentTheme", "header", "cleanup", "addEventListener", "e", "toggleTheme", "initTheme", "defaultTheme", "theme", "MOBILE_BREAKPOINT", "ANIMATION_DURATION", "FOCUSABLE_ELEMENTS", "isMobile", "toggleBodyScrollLock", "lock", "body", "scrollY", "closeMobileMenu", "toggle", "qsSafe", "menu", "openMobileMenu", "firstMenuItem", "toggleMobileMenu", "handleOutsideClick", "event", "target", "isClickInsideMenu", "isClickOnToggle", "handleEscapeKey", "setupMobileToggle", "cleanup", "addEventListener", "e", "setupClickOutsideToClose", "setupKeyboardNavigation", "focusableElements", "firstElement", "lastElement", "setupEscapeKeyHandler", "setupResponsiveBehavior", "isCurrentlyMobile", "handleResize", "isNowMobile", "resizeTimeout", "createMobileToggle", "button", "setupMobileMenu", "desktopNav", "navLinks", "header", "initNavigation", "COPY_BUTTON_CLASS", "COPY_SUCCESS_CLASS", "COPY_ERROR_CLASS", "COPY_TIMEOUT", "copyToClipboard", "text", "textArea", "successful", "error", "showCopySuccess", "button", "originalText", "originalClasses", "showCopyError", "handleCopyClick", "codeBlock", "code", "createCopyButton", "create", "setupCopyButton", "parent", "preElement", "cleanup", "addEventListener", "e", "keydownCleanup", "activeElement", "initCopyCode", "codeBlocks", "qsa", "index", "TOC_CONTAINER_SELECTOR", "TOC_ID_PREFIX", "ACTIVE_CLASS", "HEADING_SELECTORS", "SCROLL_OFFSET", "THROTTLE_DELAY", "generateTOC", "headings", "toc", "stack", "heading", "index", "_a", "_b", "_c", "_d", "id", "item", "renderTOC", "container", "tocElement", "create", "listElement", "titleElement", "renderTOCItems", "parentElement", "items", "depth", "listItem", "link", "linkCleanup", "addEventListener", "e", "targetElement", "scrollToElement", "updateActiveTOC", "childList", "activeId", "el", "activeLink", "currentLink", "parentItem", "parentLink", "isElementInViewport", "element", "offset", "rect", "windowHeight", "getCurrentActiveHeading", "qsa", "i", "setupScrollSpy", "scrollHandler", "throttle", "cleanup", "setupContentObserver", "targetNode", "getOrCreateTOCContainer", "postContent", "pageContent", "targetContent", "firstParagraph", "initTOC", "getAppConfig", "script", "error", "initializeApp", "config", "initTheme", "initNavigation", "initCopyCode", "initTOC", "fallbackError", "ready"]
}
